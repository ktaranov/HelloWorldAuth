<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fonlow.Testing</name>
    </assembly>
    <members>
        <member name="M:Fonlow.Testing.CopyFilesFixture.CopyFilesToCurrentOnce(System.String)">
            <summary>
            This is to replacement of DeploymentItemAttribute in MsTest
            </summary>
            <param name="sourceDir"></param>
        </member>
        <member name="T:Fonlow.Testing.IisExpressAgent">
            <summary>
            For starting and stoping IIS Express
            </summary>
            <remarks>The IIS Express config is at </remarks>
        </member>
        <member name="T:Fonlow.Testing.IisExpressFixture">
            <summary>
            Launch IIS Express if AppSettings["Testing_UseIisExpress"] is true, using the following settings
            AppSettings["Testing_HostSite"]; AppSettings["Testing_HostSiteApplicationPool"];
            </summary>
        </member>
        <member name="M:Fonlow.Testing.IisExpressFixture.Create">
            <summary>
            Create the fixture only if AppSettings["Testing_UseIisExpress"].
            </summary>
            <returns>Null if AppSettings["Testing_UseIisExpress"] is false.</returns>
        </member>
        <member name="T:Fonlow.Testing.PermissionPrincipalFixture">
            <summary>
            Create scurity principal based on role, to test service implementations decorated with PrincipalPermissionAttribute with Role. 
            Client codes will be allowed to run the service implementation without needing authentication while authorization with a proper role will be sufficient.
            </summary>
        </member>
        <member name="M:Fonlow.Testing.PermissionPrincipalFixture.#ctor(System.String)">
            <summary>
            Used by derived class to be used by XUnit.IClassFixture which requires a default constructor.
            </summary>
            <param name="roleName"></param>
        </member>
        <member name="M:Fonlow.Testing.PermissionPrincipalFixture.SetPrincipal(System.String)">
            <summary>
            Give permission in every test. Used in constructor.
            </summary>
            <param name="roleName"></param>
        </member>
        <member name="T:Fonlow.Testing.DefaultHttpClientFixture">
            <summary>
            Provide an authorized HttpClient instance with uri and username/password defined in app config, with AppSettings:
            Testing_BaseUrl, Testing_Username and Testing_Password.
            </summary>
        </member>
        <member name="T:Fonlow.Testing.HttpClientWithUsername">
            <summary>
            Wrap a HttpClient instance with a bearer token initialized through username and password.
            </summary>
        </member>
        <member name="M:Fonlow.Testing.HttpClientWithUsername.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initialize HttpClient with a bear token obtained after posting username and password. To be used in a xUnit Fixture or Collection, the derived
            class must have a default constructor for initializing the parameters of this constructor.
            </summary>
            <param name="baseUri"></param>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="P:Fonlow.Testing.HttpClientWithUsername.AccessToken">
            <summary>
            Access_token returned in token
            </summary>
        </member>
        <member name="P:Fonlow.Testing.HttpClientWithUsername.TokenType">
            <summary>
            Generally bearer
            </summary>
        </member>
        <member name="P:Fonlow.Testing.HttpClientWithUsername.AuthorizedClient">
            <summary>
            Null if the authentication failed.
            </summary>
        </member>
        <member name="M:Fonlow.Testing.HttpClientWithUsername.AnalyzeToken">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fonlow.Testing.HttpClientWithUsername.GetToken(System.Uri,System.String,System.String)">
            <summary>
            Get the token body as json text from WebApi default token path
            </summary>
            <param name="baseUri"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <returns>Null if fails, and the error is in Trace.</returns>
        </member>
    </members>
</doc>
